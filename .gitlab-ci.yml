stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
image: tatevikg1/some-app:1.0

services:
  - name: docker:dind

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - mkdir vendor
    - mkdir node_modules
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_REGISTRY_IMAGE:${CI_COMMIT_SHORT_SHA} -f docker-compose/app/Dockerfile .
    - docker push $CI_REGISTRY/$CI_REGISTRY_IMAGE:${CI_COMMIT_SHORT_SHA}

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - cp .env.example .env
    - composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader --quiet
    - ls -la
    - php artisan test
    - php artisan optimize:clear
    - rm .env
    - rm -rf vendor
  only:
    - master

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - pwd
    - echo "No lint tests."

deploy-job:      # This job runs in the deployment stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application deployment not set up yet."
